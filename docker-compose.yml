services:
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 5s
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
    env_file:
      - .env
    volumes:
      - influxdb-data:/var/lib/influxdb

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    user: "node"
    ports:
      - "5678:5678"
    env_file:
      - .env
    environment:
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
      N8N_RUNNERS_ENABLED: "true"
      N8N_ENABLE_COMMUNITY_NODES: "true"
      N8N_COMMUNITY_PACKAGES: '["n8n-nodes-influxdb"]'
    volumes:
      - n8n-data:/home/node/.n8n
      - ./n8n/workflows:/workflows
      - ./anomaly-data:/data:ro
      - ./scripts/n8n-entrypoint.sh:/docker-n8n-entrypoint.sh:ro
    entrypoint: [ "/bin/sh", "/docker-n8n-entrypoint.sh" ]
    restart: unless-stopped

  generator:
    build:
      context: .
      dockerfile: Dockerfile.generator
    container_name: net-data-generator
    env_file:
      - .env
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - GEN_ANOMALY_PROB=1.0
      - GEN_NOISE_LEVEL=${GEN_NOISE_LEVEL:-1.0}
      - GEN_DEVICES=${GEN_DEVICES:-3}
      - GEN_DEVICE_PREFIX=${GEN_DEVICE_PREFIX:-router}
      - GEN_WRITE_MODE=${GEN_WRITE_MODE:-sync}
      - GEN_RECREATE_BUCKET=${GEN_RECREATE_BUCKET:-true}
      - GEN_CONTINUOUS=${GEN_CONTINUOUS:-1}
      - GEN_INTERVAL_SECONDS=${GEN_INTERVAL_SECONDS:-10}
      - GEN_START=${GEN_START}
      - GEN_END=${GEN_END}
      - GEN_SEED=${GEN_SEED}
    restart: on-failure
    depends_on:
      - influxdb

  detector:
    build:
      context: .
      dockerfile: Dockerfile.detector
    container_name: net-anomaly-detector
    env_file:
      - .env
    depends_on:
      - redis
      - influxdb
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - DETECT_POLL_INTERVAL_SECONDS=${DETECT_POLL_INTERVAL_SECONDS:-60}
      - DETECT_LOOKBACK_MINUTES=${DETECT_LOOKBACK_MINUTES:-60}
      - DETECT_STD_FLOOR=${DETECT_STD_FLOOR:-0.0001}
      - DETECT_WATCH=1
      - REDIS_QUEUE=anomaly_queue
    restart: unless-stopped
    volumes:
      - ./anomaly-data:/data


volumes:
  influxdb-data:
  n8n-data:
  anomaly-data: